{% macro build_ast(astlist, name) %}
{% for ast in astlist %}
{% if ast.name == name %}

We have the following subcases:

.. cpp:namespace:: black::{{ ast.namespace }}

{% for node in ast.nodes %}
.. cpp:struct:: {{ node.name }}

   {{ node.doc }}

   :constructor:
      .. cpp:function:: {{ node.name }}(
            {%- for field in node.fields -%}
            {{ field.type }} {{ field.name}} {{", " if not loop.last else ""}}
            {%- endfor -%}
      )

      {% for field in node.fields %}
         :param {{field.name}}: {{field.doc}}
      {% endfor %}

   :members:

   {% for field in node.fields %}
      .. cpp:function:: {{field.type}} {{field.name}}() const

         :returns: {{field.doc}}

   {% endfor %}
        
{% endfor %}

{% endif %}
{% endfor %}
{% endmacro %}