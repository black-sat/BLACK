task:
  matrix:
    - name: Fedora 29 (g++ 8)
      container:
        dockerfile: docker/Dockerfile.fedora
        docker_arguments:
          VERSION: 29
    - name: Fedora 30 (g++ 9)
      container:
        dockerfile: docker/Dockerfile.fedora
        docker_arguments:
          VERSION: 30
    - name: Fedora 31 (g++ 9)
      container:
        dockerfile: docker/Dockerfile.fedora
        docker_arguments:
          VERSION: 31
    - name: Fedora 32 (g++ 10)
      container:
        dockerfile: docker/Dockerfile.fedora
        docker_arguments:
          VERSION: 32
        environment:
          CODECOV_TOKEN: ENCRYPTED[f6131f3947378ac741bd50e49a83f7e619100d91f4c4ff79180a508e39c93f07e2a90c17174261dbafebd70c2f150d45]
    - name: Ubuntu 18.04 (g++ 8)
      container:
        dockerfile: docker/Dockerfile.ubuntu
        docker_arguments:
          VERSION: 18.04
          GCC_VERSION: 8
    - name: Ubuntu 20.04 (g++ 9)
      container:
        dockerfile: docker/Dockerfile.ubuntu
        docker_arguments:
          VERSION: 20.04
          GCC_VERSION: 9
  download_dependencies_script:
    - ./download-mathsat.sh
  debug_build_script:
    - mkdir build && cd build
    - cmake -DCMAKE_BUILD_TYPE=Debug -DCODE_COVERAGE=ON ..
    - make
  test_script:
    - cd build
    - ctest -R black
  coverage_script:
    - cd build
    - if [ "$CODECOV_TOKEN" ]; then \
        bash <(curl -s https://codecov.io/bash); \
      fi


task:
  name: macOS (Apple clang)
  osx_instance:
    image: catalina-base
  download_dependencies_script:
    - brew install cmake gmp wget
    - ./download-mathsat.sh
  debug_build_script:
    - mkdir -p build && cd build
    - cmake -DCMAKE_BUILD_TYPE=Debug ..
    - make
  test_script:
    - cd build 
    - ctest -R black

task:
  name: macOS (with Z3 SAT backend)
  osx_instance:
    image: catalina-base
  download_dependencies_script:
    - brew install cmake gmp wget z3
    - ./download-mathsat.sh
  debug_build_script:
    - mkdir -p build/debug && cd build/debug
    - cmake -DCMAKE_BUILD_TYPE=Release -DBLACK_TESTS_SAT_BACKEND=z3 ../..
    - make
  test_script:
    - cd build/debug 
    - ctest -R black

task:
  name: macOS (with CryptoMiniSAT backend)
  osx_instance:
    image: catalina-base
  download_dependencies_script:
    - brew install cmake gmp wget cryptominisat
    - ./download-mathsat.sh
  release_build_script:
    - mkdir -p build/debug && cd build/debug
    - cmake -DCMAKE_BUILD_TYPE=Release -DBLACK_TESTS_SAT_BACKEND=cmsat ../..
    - make
  test_script:
    - cd build/debug 
    - ctest -R black
  