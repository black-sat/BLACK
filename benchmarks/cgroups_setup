#!/bin/bash

# (C) 2020 Gabriele Venturato
# Script to create cgroups-v1 in order to perform benchmarks

# --------------------------------- Utilities ----------------------------------
report() {
  echo "$@" >&2
}

die() {
  report "$@"
  exit 1
}

help() {
  cat <<HELP
Usage: ./$(basename "$0") setup <cpu_num> <memory_max>

  Create groupnames 'memory:benchmark/cpu1',..,'memory:benchmark/cpu<cpu_num>'.
  The groupname 'memory:benchmark' must already exists.

  cpu_num     : is a positive integer number
  memory_max  : the limit for the memory expressed in bytes or with K,M,G
                (e.g. 500M, 1GB, etc..)

Usage: ./$(basename "$0") clean <cpu_min> <cpu_max>
  Delete groupnames from 'memory:benchmark/cpu<cpu_min>' to 
  'memory:benchmark/cpu<cpu_max>'.

Dependency: libcgroup
HELP
}

errhelp() {
  help >&2
}

# ----------------------------------- Main -------------------------------------
clean() {
  # Mandatory parameters check
  if [[ $# -ne 2 ]]; then
    errhelp
    exit 1
  fi

  I_MIN=$1
  I_MAX=$2

  for (( i=I_MIN; i<=I_MAX; i++ ))
  do 
    cgdelete -g memory:benchmark/cpu$i
  done
}

setup() {
  # Check if the "memory:benchmark" groupname already exists
  if [[ ! -d "/sys/fs/cgroup/memory/benchmark" ]]; then
    die \
"The 'benchmark' groupname does not exists. Try creating it with:
  sudo cgcreate -a <user>:<user> -t <user>:<user> -g memory:benchmark
where <user> is the username of who have to launch benchmarks."
  fi

  # Mandatory parameters check
  if [[ $# -ne 2 ]]; then
    errhelp
    exit 1
  fi

  N=$1
  MEM=$2

  for (( i=1; i<=N; i++ ))
  do
    cgcreate -g memory:benchmark/cpu$i

    echo $MEM >/sys/fs/cgroup/memory/benchmark/cpu$i/memory.limit_in_bytes
    echo $MEM >/sys/fs/cgroup/memory/benchmark/cpu$i/memory.memsw.limit_in_bytes
  done
}

CMD=$@

if [[ -z "$CMD" ]]; then
  CMD=errhelp
fi

# The actual script starts here: execute whatever is found in command line
$CMD
